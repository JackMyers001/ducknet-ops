---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: radarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      radarr:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4.0
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.22.0.9808@sha256:2bf6a9a5f30b28f09fa5601b23d095c64739ab0667753b95493a1bcdf194057d

            env:
              RADARR__SERVER__PORT: &port 80

              TZ: Australia/Perth

            envFrom: *envFrom

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            resources:
              requests:
                cpu: 100m
              limits:
                memory: 4Gi

    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - radarr.home.ducknet.fun
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: radarr
        globalMounts:
          - path: /config

      media:
        type: nfs
        server: "10.4.20.10"
        path: /mnt/coeus-pool/media
        globalMounts:
          - path: /media

      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4001, 4011]
        seccompProfile: { type: "RuntimeDefault" }
