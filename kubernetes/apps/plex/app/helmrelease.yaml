---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: nvidia-device-plugin
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      plex:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.5.9522@sha256:1c35e44828531320f4fccd980da5a3d0da08a438f1c89841d8be97cfefe66e63

            env:
              PLEX_ADVERTISE_URL: http://plex.ducknet.fun:443
              TZ: Australia/Perth

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            resources:
              requests:
                cpu: 100m
              limits:
                memory: 16Gi
                nvidia.com/gpu: 1

    service:
      app:
        controller: plex
        ports:
          http:
            port: *port

    ingress:
      app:
        className: traefik
        hosts:
          - host: plex.ducknet.fun
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: plex
        globalMounts:
          - path: /config

      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache

      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs

      transcode:
        type: emptyDir

      anime:
        type: nfs
        server: "10.4.20.10"
        path: /mnt/coeus-pool/media/anime
        globalMounts:
          - path: /media/anime
            readOnly: true

      movies:
        type: nfs
        server: "10.4.20.10"
        path: /mnt/coeus-pool/media/movies
        globalMounts:
          - path: /media/movies
            readOnly: true

      shows:
        type: nfs
        server: "10.4.20.10"
        path: /mnt/coeus-pool/media/shows
        globalMounts:
          - path: /media/shows
            readOnly: true

      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

    defaultPodOptions:
      runtimeClassName: nvidia

      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4001, 4002, 4004]
        seccompProfile: { type: "RuntimeDefault" }

      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
